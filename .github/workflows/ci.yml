name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: asyncstand_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup environment
        run: pnpm env:setup

      - name: Setup database
        run: |
          cd apps/backend
          npx prisma generate
          npx prisma migrate deploy
        env:
          DATABASE_URL: 'postgresql://postgres:postgres@localhost:5432/asyncstand_test'
          NODE_ENV: 'test'

      - name: Check formatting
        run: pnpm format:check

      - name: Lint code
        run: pnpm lint

      - name: Build project
        run: pnpm build

      - name: Run e2e tests
        run: pnpm test:e2e:backend
        env:
          DATABASE_URL: 'postgresql://postgres:postgres@localhost:5432/asyncstand_test'
          JWT_SECRET: 'test-secret-key-for-ci'
          NODE_ENV: 'test'
